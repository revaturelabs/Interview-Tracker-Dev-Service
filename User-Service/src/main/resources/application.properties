

spring.application.name=user-service
eureka.instance.instance-id=${spring.application.name}:${random.value}
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true


server.port=50111

spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.hikari.maximum-pool-size=2
spring.jpa.show-sql=false
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false


#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=${JDBC_URL}
#spring.datasource.username=${JDBC_USERNAME}
#spring.datasource.password=${JDBC_PASSWORD}
#spring.datasource.driver-class-name=org.postgresql.Driver

# Enabling H2 Console
spring.h2.console.enabled=true
# to view this go to localhost:port/h2-console
spring.datasource.name=User_ServiceDB
spring.datasource.initialize=false
spring.datasource.username=sa
spring.datasource.password=sa
# add IFEXISTS=TRUE;  if we want to stop creation of local DB
spring.datasource.url=jdbc:h2:./User_ServiceDB;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto = update


